{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","initial","handleKeyUp","event","setState","key","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAOaA,EAAb,4MACEC,MAAyB,CACvBC,WAAY,GACZC,SAAS,GAHb,EAcEC,YAAc,SAACC,GACb,EAAKC,SAAS,CACZJ,WAAYG,EAAME,IAClBJ,SAAS,KAjBf,uDAME,WACEK,SAASC,iBAAiB,QAASC,KAAKN,eAP5C,kCAUE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,eAX/C,oBAqBE,WACE,MAAgCM,KAAKT,MAA7BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,QAEpB,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGT,EAAU,0BAAH,mCAA2DD,EAA3D,aA3BlB,GAAyBW,a,MCFzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.ab62fe8f.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  pressedKey: string,\n  initial: boolean,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    pressedKey: '',\n    initial: true,\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleKeyUp);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleKeyUp);\n  }\n\n  handleKeyUp = (event: KeyboardEvent) => {\n    this.setState({\n      pressedKey: event.key,\n      initial: false,\n    });\n  };\n\n  render() {\n    const { pressedKey, initial } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {initial ? 'Nothing was pressed yet' : `The last pressed key is [${pressedKey}]`}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}